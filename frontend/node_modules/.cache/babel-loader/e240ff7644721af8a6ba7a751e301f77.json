{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabriel/Desktop/exercise-tracker/frontend/src/components/active-tasks-list.component.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/custom.css';\n\nconst RenderModal = props => {\n  if (props.selectedTask !== '') {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.showModal,\n      onHide: props.toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"The body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.toggleModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_c = RenderModal;\n\nconst Task = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mx-3 my-3 col-md-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: props.task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-subtitle mb-2 text-muted\",\n            children: props.task.course\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-subtitle mb-2 text-muted\",\n            children: props.task.deadline.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: props.task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"card-link\",\n            onClick: props.showModal,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"card-link\",\n            onClick: () => {\n              props.deleteTask(props.task._id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-success btn-lg\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n\n_c2 = Task;\nexport default class ActiveTasksList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      isLoaded: false,\n      tasks: [],\n      selectedTask_id: ''\n    };\n    this.deleteTask = this.deleteTask.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/tasks/').then(response => {\n      this.setState({\n        isLoaded: true,\n        tasks: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  deleteTask(id) {\n    axios.delete('http://localhost:5000/tasks/' + id).then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n    this.setState({\n      tasks: this.state.tasks.filter(el => el._id !== id)\n    });\n  }\n\n  toggleModal(id) {\n    this.setState({\n      showModal: !this.state.showModal,\n      selectedTask_id: id\n    });\n  }\n\n  render() {\n    const {\n      isLoaded,\n      tasks\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: tasks.map(currentTask => /*#__PURE__*/_jsxDEV(Task, {\n          task: currentTask,\n          deleteTask: this.deleteTask,\n          showModal: this.toggleModal(currentTask._id)\n        }, currentTask._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RenderModal, {\n        selectedTask: this.state.selectedTask_id,\n        showModal: this.state.showModal,\n        toggleModal: this.toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderModal\");\n$RefreshReg$(_c2, \"Task\");","map":{"version":3,"sources":["/Users/gabriel/Desktop/exercise-tracker/frontend/src/components/active-tasks-list.component.js"],"names":["React","Component","Modal","Link","axios","RenderModal","props","selectedTask","showModal","toggleModal","Task","task","title","course","deadline","substring","description","deleteTask","_id","ActiveTasksList","constructor","state","isLoaded","tasks","selectedTask_id","bind","componentDidMount","get","then","response","setState","data","catch","err","console","log","id","delete","res","filter","el","render","map","currentTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/custom.css';\n\nconst RenderModal = props => {\n    if(props.selectedTask !== ''){\n        return (\n            <Modal show={props.showModal} onHide={props.toggleModal}>\n                <Modal.Header>\n                    <Modal.Title>Hi</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>The body</Modal.Body>\n                <Modal.Footer>\n                    <button onClick={props.toggleModal}>Cancel</button>\n                    <button>Save</button>\n                </Modal.Footer>\n            </Modal>\n        );\n    } else {\n        return null;\n    }\n}\n\nconst Task = props => {\n    return (\n            <div className=\"card mx-3 my-3 col-md-3\">\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-10\">\n                            <h5 className=\"card-title\">{props.task.title}</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{props.task.course}</h6>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{props.task.deadline.substring(0,10)}</h6>\n                            <p className=\"card-text\">{props.task.description}</p>\n                            <a href=\"#\" className=\"card-link\" onClick={props.showModal}>Edit</a>\n                            <a href=\"#\" className=\"card-link\" onClick={() => {props.deleteTask(props.task._id)}}>Delete</a>\n                        </div>\n                        <div className=\"col-2\">\n                            <button type=\"button\" className=\"btn btn-outline-success btn-lg\">✓</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    );\n}\n\nexport default class ActiveTasksList extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showModal: false,\n            isLoaded: false,\n            tasks: [],\n            selectedTask_id: '',\n        };\n\n        this.deleteTask = this.deleteTask.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n    \n    componentDidMount(){\n        axios.get('http://localhost:5000/tasks/')\n            .then(response => {\n                this.setState({\n                    isLoaded: true,\n                    tasks: response.data \n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    deleteTask(id){\n        axios.delete('http://localhost:5000/tasks/'+id)\n            .then(res => {\n                console.log(res.data);\n            })\n            .catch(err => console.log(err));\n\n        this.setState({\n            tasks: this.state.tasks.filter(el => el._id !== id)\n        });\n    }\n\n    toggleModal(id){\n        this.setState({ \n            showModal: !this.state.showModal,\n            selectedTask_id: id\n        });\n    }\n\n    render(){\n        const {isLoaded, tasks} = this.state;\n\n        if(!isLoaded){\n            return (\n                <div className=\"container\">\n                    Loading...\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"main-container\">\n                <div className=\"row\">\n                    {tasks.map(currentTask => <Task key={currentTask._id} task={currentTask} deleteTask={this.deleteTask} showModal={this.toggleModal(currentTask._id)}/>)}\n                </div>\n\n                <RenderModal selectedTask={this.state.selectedTask_id} showModal={this.state.showModal} toggleModal={this.toggleModal} />\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}