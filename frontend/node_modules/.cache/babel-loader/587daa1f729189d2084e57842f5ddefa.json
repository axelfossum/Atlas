{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabriel/Desktop/exercise-tracker/frontend/src/components/active-tasks-list.component.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport axios from 'axios';\nimport '../styles/custom.css';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Task = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mr-4 my-3 col-md-3 shadow\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: props.task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-subtitle mb-2 text-muted\",\n            children: props.task.course\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-subtitle mb-2 text-muted\",\n            children: props.task.deadline.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: props.task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn p-0 btn-link\",\n            onClick: () => props.showModal(props.task._id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mx-3\",\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn p-0 btn-link\",\n            onClick: () => {\n              props.deleteTask(props.task._id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-success btn-lg\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Task;\nexport default class ActiveTasksList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      isLoaded: false,\n      tasks: [],\n      currentTaskTitle: '',\n      currentTaskCourse: '',\n      currentTaskDescription: '',\n      currentTaskDeadline: new Date()\n    };\n    this.deleteTask = this.deleteTask.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.onChangeCurrentTaskTitle = this.onChangeCurrentTaskTitle.bind(this);\n    this.onChangeCurrentTaskCourse = this.onChangeCurrentTaskCourse.bind(this);\n    this.onChangeCurrentTaskDeadline = this.onChangeCurrentTaskDeadline.bind(this);\n    this.onChangeCurrentTaskDescription = this.onChangeCurrentTaskDescription.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/').then(response => {\n      this.setState({\n        isLoaded: true,\n        tasks: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  deleteTask(id) {\n    axios.delete('http://localhost:5000/' + id).then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n    this.setState({\n      tasks: this.state.tasks.filter(el => el._id !== id)\n    });\n  }\n\n  toggleModal(id) {\n    if (id !== '') {\n      this.setState({\n        currentTaskTitle: this.state.tasks.find(task => task._id === id).title,\n        currentTaskCourse: this.state.tasks.find(task => task._id === id).course,\n        currentTaskDeadline: new Date(this.state.tasks.find(task => task._id === id).deadline),\n        currentTaskDescription: this.state.tasks.find(task => task._id === id).description\n      });\n    }\n\n    this.setState({\n      showModal: !this.state.showModal\n    });\n  }\n\n  onChangeCurrentTaskTitle(e) {\n    this.setState({\n      currentTaskTitle: e.target.value\n    });\n  }\n\n  onChangeCurrentTaskCourse(e) {\n    this.setState({\n      currentTaskCourse: e.target.value\n    });\n  }\n\n  onChangeCurrentTaskDeadline(deadline) {\n    this.setState({\n      currentTaskDeadline: deadline\n    });\n  }\n\n  onChangeCurrentTaskDescription(e) {\n    this.setState({\n      currentTaskDescription: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      isLoaded,\n      tasks\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-5 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row my-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-lg shadow\",\n          children: \"+ \\xA0Add new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: tasks.map(currentTask => /*#__PURE__*/_jsxDEV(Task, {\n          task: currentTask,\n          deleteTask: this.deleteTask,\n          showModal: this.toggleModal\n        }, currentTask._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.showModal,\n        onHide: () => this.toggleModal(''),\n        size: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onEditTask,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mt-2 mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Title: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    required: true,\n                    className: \"form-control\",\n                    value: this.state.currentTaskTitle,\n                    onChange: this.onChangeCurrentTaskTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row my-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Course: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    required: true,\n                    className: \"form-control\",\n                    value: this.state.currentTaskCourse,\n                    onChange: this.onChangeCurrentTaskCourse\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Deadline: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 66\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: \"form-control\",\n                    selected: this.state.currentTaskDeadline,\n                    showTimeSelect: true,\n                    onChange: this.onChangeCurrentTaskDeadline\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Description: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control\",\n                  value: this.state.currentTaskDescription,\n                  onChange: this.onChangeCurrentTaskDescription\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light\",\n              onClick: () => this.toggleModal(''),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/gabriel/Desktop/exercise-tracker/frontend/src/components/active-tasks-list.component.js"],"names":["React","Component","Modal","axios","DatePicker","Task","props","task","title","course","deadline","substring","description","showModal","_id","deleteTask","ActiveTasksList","constructor","state","isLoaded","tasks","currentTaskTitle","currentTaskCourse","currentTaskDescription","currentTaskDeadline","Date","bind","toggleModal","onChangeCurrentTaskTitle","onChangeCurrentTaskCourse","onChangeCurrentTaskDeadline","onChangeCurrentTaskDescription","componentDidMount","get","then","response","setState","data","catch","err","console","log","id","delete","res","filter","el","find","e","target","value","render","map","currentTask","onEditTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport axios from 'axios';\nimport '../styles/custom.css';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Task = props => {\n    return (\n            <div className=\"card mr-4 my-3 col-md-3 shadow\">\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-10\">\n                            <h5 className=\"card-title\">{props.task.title}</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{props.task.course}</h6>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{props.task.deadline.substring(0,10)}</h6>\n                            <p className=\"card-text\">{props.task.description}</p>\n                            <button className=\"btn p-0 btn-link\" onClick={() => props.showModal(props.task._id)}>Edit</button>\n                            <div className=\"mx-3\">|</div>\n                            <button className=\"btn p-0 btn-link\" onClick={() => {props.deleteTask(props.task._id)}}>Delete</button>\n                        </div>\n                        <div className=\"col-2\">\n                            <button type=\"button\" className=\"btn btn-outline-success btn-lg\">✓</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    );\n}\n\nexport default class ActiveTasksList extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showModal: false,\n            isLoaded: false,\n            tasks: [],\n            currentTaskTitle: '',\n            currentTaskCourse: '',\n            currentTaskDescription: '',\n            currentTaskDeadline: new Date()\n        };\n\n        this.deleteTask = this.deleteTask.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.onChangeCurrentTaskTitle = this.onChangeCurrentTaskTitle.bind(this);\n        this.onChangeCurrentTaskCourse = this.onChangeCurrentTaskCourse.bind(this);\n        this.onChangeCurrentTaskDeadline = this.onChangeCurrentTaskDeadline.bind(this);\n        this.onChangeCurrentTaskDescription = this.onChangeCurrentTaskDescription.bind(this);\n\n    }\n    \n    componentDidMount(){\n\n        axios.get('http://localhost:5000/')\n            .then(response => {\n                this.setState({\n                    isLoaded: true,\n                    tasks: response.data \n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    deleteTask(id){\n        axios.delete('http://localhost:5000/'+id)\n            .then(res => {\n                console.log(res.data);\n            })\n            .catch(err => console.log(err));\n\n        this.setState({\n            tasks: this.state.tasks.filter(el => el._id !== id)\n        });\n    }\n\n    toggleModal(id){\n    \n        if(id !== ''){\n            this.setState({\n                currentTaskTitle: this.state.tasks.find(task => task._id === id).title,\n                currentTaskCourse: this.state.tasks.find(task => task._id === id).course,\n                currentTaskDeadline: new Date(this.state.tasks.find(task => task._id === id).deadline),\n                currentTaskDescription: this.state.tasks.find(task => task._id === id).description,\n            });\n        }\n\n        this.setState({\n            showModal: !this.state.showModal,\n        });\n        \n    }\n\n    onChangeCurrentTaskTitle(e){\n        this.setState({\n           currentTaskTitle: e.target.value \n        });\n    }\n\n    onChangeCurrentTaskCourse(e){\n        this.setState({\n            currentTaskCourse: e.target.value\n        });\n    }\n\n    onChangeCurrentTaskDeadline(deadline){\n        this.setState({\n            currentTaskDeadline: deadline\n        });\n    }\n\n    onChangeCurrentTaskDescription(e){\n        this.setState({\n            currentTaskDescription: e.target.value\n        });\n    }\n\n    render(){\n        const {isLoaded, tasks} = this.state;\n\n        if(!isLoaded){\n            return (\n                <div className=\"container-fluid\">\n                    Loading...\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"container-fluid px-5 pt-4\">\n                <div className=\"row my-2\">\n                    <button className=\"btn btn-primary btn-lg shadow\">+ &nbsp;Add new task</button>\n                </div>\n                <div className=\"row\">\n                    {tasks.map(currentTask => <Task key={currentTask._id} task={currentTask} deleteTask={this.deleteTask} showModal={this.toggleModal}/>)}\n                </div>\n\n                <Modal show={this.state.showModal} onHide={() => this.toggleModal('')} size=\"lg\">\n                    <form onSubmit={this.onEditTask}>\n                        <Modal.Body>\n                            <div className=\"p-2\">\n                                <div className=\"row mt-2 mb-3\">\n                                    <div className=\"col form-group\">\n                                        <label>Title: </label>\n                                        <input type=\"text\"\n                                            required\n                                            className=\"form-control\"\n                                            value={this.state.currentTaskTitle}\n                                            onChange={this.onChangeCurrentTaskTitle}\n                                        />\n                                    </div>\n                                </div>\n                                <div class=\"row my-3\">\n                                    <div className=\"col form-group\">\n                                        <label>Course: </label>\n                                        <input type=\"text\"\n                                            required\n                                            className=\"form-control\"\n                                            value={this.state.currentTaskCourse}\n                                            onChange={this.onChangeCurrentTaskCourse}\n                                        />\n                                    </div>\n                                    <div className=\"col form-group\">\n                                        <label>Deadline: </label><br/>\n                                        <DatePicker\n                                            className=\"form-control\"\n                                            selected={this.state.currentTaskDeadline}\n                                            showTimeSelect\n                                            onChange={this.onChangeCurrentTaskDeadline}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Description: </label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        value={this.state.currentTaskDescription}\n                                        onChange={this.onChangeCurrentTaskDescription}\n                                    />\n                                </div>\n                            </div>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <button className=\"btn btn-light\" onClick={() => this.toggleModal('')}>Cancel</button>\n                            <button className=\"btn btn-success\">Save changes</button>\n                        </Modal.Footer>\n                    </form>\n                </Modal>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}